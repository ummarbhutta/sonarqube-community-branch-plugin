server {
    ----LISTEN_PROTOCOL_CONF---- #listen       80;
    server_name  localhost;

    absolute_redirect off; # To prevent internal redirect causing invalid URL(s), when e.g. port of process and exposed port on host is different (in case of docker), and reverse proxy cases
    access_log  /var/log/nginx/host.access.log  main;
    error_log  /var/log/nginx/host.error.log  debug;

    ----SSL_CERT_CONF----
    #ssl_certificate /etc/ssl/certificates/server.crt; ##${SSL_CERT}
    #ssl_certificate_key /etc/ssl/certificates/server.key; ##${SSL_PRIVATE_KEY}


    location / {
       proxy_pass http://sonarqube:9000;  
       proxy_http_version 1.1;  
       proxy_set_header Upgrade $http_upgrade;  
       proxy_set_header Connection 'upgrade';  
       proxy_set_header Host $host;  
       proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address 
       proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
       proxy_cache_bypass $http_upgrade;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

